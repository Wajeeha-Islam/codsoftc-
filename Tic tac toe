#include <iostream>
#include <iomanip>
using namespace std;

char gem[3][3] = {{'1', '2', '3'}, {'4', '5', '6'}, {'7', '8', '9'}};
string n1;
string n2;
char mark = 'X';
bool tie = false;
void flower(){
	for(int i=0 ; i<=119 ; i++ ){
		cout<<"*";
	}
	cout<<endl;
}

void initialize() {
    cout << "Enter the name of 1st player : ";
    getline(cin, n1);
    cout << "Enter the name of 2nd player : ";
    getline(cin, n2);

    cout << n1 << " -> X" << endl;
    cout << n2 << " -> O" << endl;
    
    flower();
}

void displayBoard() {
    cout << "      |       |       " << endl;
    cout << "   " << gem[0][0] << "  |   " << gem[0][1] << "   |   " << gem[0][2] << "   " << endl;
    cout << "______|_______|______ " << endl;
    cout << "      |       |       " << endl;
    cout << "   " << gem[1][0] << "  |   " << gem[1][1] << "   |   " << gem[1][2] << "   " << endl;
    cout << "______|_______|______ " << endl;
    cout << "      |       |       " << endl;
    cout << "   " << gem[2][0] << "  |   " << gem[2][1] << "   |   " << gem[2][2] << "   " << endl;
    cout << "      |       |       " << endl;
    flower();
}

void checkNumber() {
    int num;

    if (mark == 'X') {
        cout << n1 << " please enter: ";
        cin >> num;
    } else {
        cout << n2 << " please enter: ";
        cin >> num;
    }

    int row = (num - 1) / 3;
    int col = (num - 1) % 3;

    if (num < 1 || num > 9 || gem[row][col] == 'X' || gem[row][col] == 'O') {
        cout << "Invalid move. Try again." << endl;
        checkNumber();
    } else {
        if (mark == 'X') {
            gem[row][col] = 'X';
            mark = 'O';
        } else {
            gem[row][col] = 'O';
            mark = 'X';
        }
    }
}

bool statusOfGame() {
    for (int i = 0; i < 3; i++) {
        if ((gem[i][0] == gem[i][1] && gem[i][1] == gem[i][2]) || (gem[0][i] == gem[1][i] && gem[1][i] == gem[2][i]))
            return true;
    }
    if ((gem[0][0] == gem[1][1] && gem[1][1] == gem[2][2]) || (gem[0][2] == gem[1][1] && gem[1][1] == gem[2][0]))
        return true;

    // Check if all cells are filled
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            if (gem[i][j] != 'X' && gem[i][j] != 'O') {
                return false; // At least one empty cell is found, the game is not a tie
            }
        }
    }

    // If all cells are filled and no player has won, it's a tie
    tie = true;
    return true;
}

int main() {
    initialize();

    while (!statusOfGame()) {
        displayBoard();
        checkNumber();
    }

    displayBoard();

    if (mark == 'X' && !tie) {
        cout << n2 << " wins!!" << endl;
    } else if (mark == 'O' && !tie) {
        cout << n1 << " wins!!" << endl;
    } else {
        cout << "It's a draw!!!" << endl;
    }
    return 0;
}
